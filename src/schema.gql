# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input BlockField {
  fields: [FieldsInputs!]!
  label: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum FieldInputType {
  ARRAY
  BLOCKS
  CHECKBOX
  COLOR
  DATE
  EMAIL
  FILE
  GROUP
  NUMBER
  PASSWORD
  RADIO
  RELATIONSHIP
  RICHTEXT
  SELECT
  TABS
  TEXT
  TEXTAREA
}

input FieldsInputs {
  blocks: [BlockField!]
  defaultValue: String
  fields: [FieldsInputs!]
  hidden: Boolean
  label: String
  max: Int
  min: Int
  name: String
  options: [SelectOption!]
  position: String
  readOnly: Boolean
  relationship: RelationshipField
  required: Boolean
  step: Float
  type: FieldInputType!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type LucasDTO {
  description: String
  name: String
  publishAt: DateTime
}

input LucasInputDTO {
  description: String
  name: String
  publishAt: DateTime
}

type Mutation {
  createOneLucas(createLucasInput: LucasInputDTO!): LucasDTO!
  createOrUpdateModel(fields: [FieldsInputs!]!, modelName: String!): Boolean!
  removeOneLucas(id: Float!): LucasDTO!
  updateOneLucas(id: Float!, updateLucasInput: LucasInputDTO!): LucasDTO!
}

type Query {
  findManyLucases: [LucasDTO!]!
  findOneLucas(id: Float!): [LucasDTO!]!
  getCollection(modelName: String): [JSONObject!]!
}

input RelationshipField {
  hasMany: Boolean
  relationTo: String!
}

input SelectOption {
  label: String!
  value: String!
}